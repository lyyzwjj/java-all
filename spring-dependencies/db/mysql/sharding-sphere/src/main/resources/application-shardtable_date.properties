# shardingjdbc分片策略
# 配置数据源，给数据源起名称
spring.shardingsphere.datasource.names=m1
# 一个实体类对应两张表，覆盖
spring.main.allow-bean-definition-overriding=true
#配置数据源具体内容，包含连接池，驱动，地址，用户名和密码
spring.shardingsphere.datasource.m1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.jdbc-url=jdbc:mysql://wjjzst.com:3306/course_db?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=Wzzst310@163.com
#指定record表分布情况，配置表在哪个数据库里面，表名称都是什么  m1.record_1 , m1.record_2
spring.shardingsphere.sharding.tables.record.actual-data-nodes=m1.record_$->{2020..2023}${(1..12).collect{t ->t.toString().padLeft(2,'0')}}
# 指定record表里面主键cid 生成策略  SNOWFLAKE
spring.shardingsphere.sharding.tables.record.key-generator.column=cid
spring.shardingsphere.sharding.tables.record.key-generator.type=SNOWFLAKE
# 指定分片策略  约定cid值偶数添加到record_1表，如果cid是奇数添加到record_2表
spring.shardingsphere.sharding.tables.record.table-strategy.standard.sharding-column=create_time
spring.shardingsphere.sharding.tables.record.table-strategy.standard.precise-algorithm-class-name=com.wjjzst.db.mysql.shardingsphere.config.TimeShardingAlgorithm
# spring.shardingsphere.sharding.tables.record.table-strategy.standard.range-algorithm-class-name=com.wjjzst.db.mysql.shardingsphere.config.TimeShardingAlgorithm
# 打开sql输出日志
spring.shardingsphere.props.sql.show=true

spring.flyway.enabled=true
spring.flyway.clean-disabled=true
spring.flyway.ignore-missing-migrations=true
spring.flyway.locations=classpath:db/migration,classpath:test/db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=1.0.0
spring.flyway.sql-migration-prefix=V
spring.flyway.sql-migration-suffixes=.sql